#include <stdio.h>
#include <stdlib.h>

void readArray(int*arr, int n); 
void displayarray(int*arr, int n);
int highestnumber(int*arr, int n);
int smallestnumber(int*arr, int n);
int repeatednumbers(int*arr,int n, int a, int* counts);
int repeatedelementCount(int*arr,int n, int a, int* counts);
void showRepeatednumbers(int*arr,int n, int* counts);

int main() {
    int n, choice, element;
    printf("Enter the size of the array: ");
    scanf("%d", &n);

int* arr = (int*)malloc(n * sizeof(int));
    int* counts = (int*)calloc(1001, sizeof(int)); 

    while (1) {
        printf("\nMenu:\n");
        printf("1. Read Array\n");
        printf("2. Display Array\n");
        printf("3. Find Highest Number\n");
        printf("4. Find Smallest Number\n");
        printf("5. Check if Element is Repeated\n");
        printf("6. Count of Repeated Element\n");
        printf("7. Show Repeated Numbers with Count\n");
        printf("8. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        
        switch (choice) {
            case 1:
                readArray(arr, n);
              
                for (int i = 0; i < 1001; i++) {
                    counts[i] = 0;
                }
                for (int i = 0; i < n; i++) {
                    counts[arr[i]]++;
                }
                break;
            case 2:
                displayArray(arr, n);
                break;
            case 3:
                printf("Highest Number: %d\n", highestNumber(arr, n));
                break;
            case 4:
                printf("Smallest Number: %d\n", smallestNumber(arr, n));
                break;
            case 5:
                printf("Enter the element to check: ");
                scanf("%d", &element);
                if (repeatedNumbers(arr, n, element, counts))
                    printf("Element %d is repeated in the array.\n", element);
                else
                    printf("Element %d is not repeated in the array.\n", element);
                break;
            case 6:
                printf("Enter the element to count: ");
                scanf("%d", &element);
                printf("Element %d is repeated %d times in the array.\n", element, repeatedElementCount(arr, n, element, counts));
                break;
            case 7:
                showRepeatedNumbers(arr, n, counts);
                break;
            case 8:
                free(arr);
                free(counts);
                return 0;
            default:
                printf("Invalid choice. Please enter a number between 1 and 8.\n");
        }
    }
    return 0;
}
void readArray(int* arr, int n) {
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
}

void displayArray(int* arr, int n) {
    printf("Array elements are:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int highestNumber(int* arr, int n) {
    int max = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    return max;
}

int smallestNumber(int* arr, int n) {
    int min = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] < min) {
            min = arr[i];
        }
    }
    return min;
}

int repeatedNumbers(int* arr, int n, int a, int* counts) {
    return counts[a] > 1;
}

int repeatedElementCount(int* arr, int n, int a, int* counts) {
    return counts[a];
}

void showRepeatedNumbers(int* arr, int n, int* counts) {
    int repeated = 0;
    for (int i = 0; i < 1001; i++) {
        if (counts[i] > 1) {
            printf("Element %d is repeated %d times\n", i, counts[i]);
            repeated = 1;
        }
    }
    if (!repeated) {
        printf("No repeated elements in the array.\n");
    }
}
